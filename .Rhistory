}
else {
names <- data.frame("Features" = features, "Guest" = guest_count, "Bob" = bob_count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
getCounts <- function (features) {
filteredGuest = vector()
filteredBob = vector()
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- guest_data[, colSums(guest_data != 0) > 0]
bob_data <- (raw_data) %>% filter(GUEST != "1")
bob_data <- bob_data[, colSums(bob_data != 0) > 0]
for (val in features) {
#Get guest data fram where all elements have 1 in the right column
guest_val <- list(guest_data[guest_data[val] == 1, ])
bob_val <- list(bob_data[bob_data[val] == 1, ])
#add that to our list
filteredGuest <- c(filteredGuest , guest_val)
filteredBob <- c(filteredBob, bob_val)
}
guest_count <- vector()
for (val in filteredGuest) {
guest_count <- c(guest_count, nrow(val))
}
guest_bob <- vector()
for (val in filteredBob) {
guest_bob <- c(guest_bob, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Guest" = guest_count, "Bob" = bob_count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
runApp()
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
getCounts <- function (features) {
filteredGuest = vector()
filteredBob = vector()
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- guest_data[, colSums(guest_data != 0) > 0]
bob_data <- (raw_data) %>% filter(GUEST != "1")
bob_data <- bob_data[, colSums(bob_data != 0) > 0]
for (val in features) {
#Get guest data fram where all elements have 1 in the right column
guest_val <- list(guest_data[guest_data[val] == 1, ])
bob_val <- list(bob_data[bob_data[val] == 1, ])
#add that to our list
filteredGuest <- c(filteredGuest , guest_val)
filteredBob <- c(filteredBob, bob_val)
}
guest_count <- vector()
for (val in filteredGuest) {
guest_count <- c(guest_count, nrow(val))
}
bob_count <- vector()
for (val in filteredBob) {
bob_count <- c(bob_count, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Guest" = guest_count, "Bob" = bob_count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
getCounts <- function (features) {
filteredGuest = vector()
filteredBob = vector()
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- guest_data[, colSums(guest_data != 0) > 0]
bob_data <- (raw_data) %>% filter(GUEST != "1")
bob_data <- bob_data[, colSums(bob_data != 0) > 0]
for (val in features) {
#Get guest data fram where all elements have 1 in the right column
guest_val <- list(guest_data[guest_data[val] == 1, ])
bob_val <- list(bob_data[bob_data[val] == 1, ])
#add that to our list
filteredGuest <- c(filteredGuest , guest_val)
filteredBob <- c(filteredBob, bob_val)
}
guest_count <- vector()
for (val in filteredGuest) {
guest_count <- c(guest_count, nrow(val))
}
bob_count <- vector()
for (val in filteredBob) {
bob_count <- c(bob_count, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Guest" = guest_count, "Bob" = bob_count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
runApp()
getCounts <- function (features) {
filteredGuest = vector()
filteredBob = vector()
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- guest_data[, colSums(guest_data != 0) > 0]
bob_data <- (raw_data) %>% filter(GUEST != "1")
bob_data <- bob_data[, colSums(bob_data != 0) > 0]
for (val in features) {
#Get guest data fram where all elements have 1 in the right column
guest_val <- list(guest_data[guest_data[val] == 1, ])
bob_val <- list(bob_data[bob_data[val] == 1, ])
#add that to our list
filteredGuest <- c(filteredGuest , guest_val)
filteredBob <- c(filteredBob, bob_val)
}
guest_count <- vector()
for (val in filteredGuest) {
guest_count <- c(guest_count, nrow(val))
}
bob_count <- vector()
for (val in filteredBob) {
bob_count <- c(bob_count, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Guest" = guest_count, "Bob" = bob_count)
plot <- ggplot(data = names, aes(x = Features, y = c("Guest", "Bob"), fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
runApp()
features <- c("BEACH", "CLIFF", "CLOUDS")
source('~/Documents/Info_201/Ott-Toomet-Fanclub-Presents-Bob-Ross/test.R', echo=TRUE)
#bob_data <- (raw_data) %>% filter(GUEST != "1")
for (val in features) {
#Get data frames where all elements have 1 in the right column
temp <- list(guest_data[guest_data[val] == 1, ])
#add that to our list
filteredList <- c(filteredList , temp)
}
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- guest_data[, colSums(guest_data != 0) > 0]
temp <- list(guest_data[guest_data[val] == 1, ])
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- (raw_data) %>% filter(GUEST != "0")
#Get data frames where all elements have 1 in the right column
temp <- list(guest_data[guest_data[val] == 1 ])
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
guest_data <- (raw_data) %>% filter(GUEST != "0")
#bob_data <- (raw_data) %>% filter(GUEST != "1")
for (val in features) {
#Get data frames where all elements have 1 in the right column
temp <- list(guest_data[guest_data[val] == 1 ])
#add that to our list
filteredList <- c(filteredList , temp)
}
filteredList = vector()
filteredList <- c(filteredList , temp)
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
getCounts <- function (features) {
filteredList = vector()
guest_data <- (raw_data) %>% filter(GUEST != "0")
#guest_data <- guest_data[, colSums(guest_data != 0) > 0]
#bob_data <- (raw_data) %>% filter(GUEST != "1")
for (val in features) {
#Get data frames where all elements have 1 in the right column
temp <- list(guest_data[guest_data[val] == 1 ])
#add that to our list
filteredList <- c(filteredList , temp)
}
count <- vector()
for (val in filteredList) {
count <- c(count, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Counts" = count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
plot3ui <- tabPanel(
"Ross: Guest vs. Solo",
sidebarPanel(
checkboxGroupInput(
"checkGroup2",
label = h3("Features"),
choices = features
)
),
mainPanel(
plotOutput(outputId = "plot3"),
hr(),
"Episodes can be found at:",
a(href = "https://www.youtube.com/channel/UCxcnsr1R5Ge_fbTu5ajt8DQ", 'Youtube'),
a(href = "https://www.twitch.tv/bobross", "Twitch"),
a(href = "https://www.netflix.com/", "Netflix")
)
)
runApp()
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
getCounts <- function (features) {
filteredList = vector()
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- guest_data[, colSums(guest_data != 0) > 0]
#bob_data <- (raw_data) %>% filter(GUEST != "1")
for (val in features) {
#Get data frames where all elements have 1 in the right column
temp <- list(guest_data[guest_data[val] == 1 ])
#add that to our list
filteredList <- c(filteredList , temp)
}
count <- vector()
for (val in filteredList) {
count <- c(count, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Counts" = count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
runApp()
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
getCounts <- function (features) {
filteredList = vector()
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- guest_data[, colSums(guest_data != 0) > 0]
#bob_data <- (raw_data) %>% filter(GUEST != "1")
for (val in features) {
#Get data frames where all elements have 1 in the right column
temp <- list(guest_data[guest_data[val] == 1, ])
#add that to our list
filteredList <- c(filteredList , temp)
}
count <- vector()
for (val in filteredList) {
count <- c(count, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Counts" = count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
runApp()
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
getCounts <- function (features) {
filteredList = vector()
for (val in features) {
#Get data frames where all elements have 1 in the right column
temp <- list(raw_data[raw_data[val] == 1, ])
#add that to our list
filteredList <- c(filteredList , temp)
}
count <- vector()
for (val in filteredList) {
count <- c(count, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Counts" = count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
runApp()
plot3ui <- tabPanel(
"Ross: Guest vs. Solo",
sidebarPanel(
checkboxGroupInput(
"checkGroup2",
label = h3("Features"),
choices = features
)
),
mainPanel(
plotOutput(outputId = "plot3"),
hr(),
"Episodes can be found at:",
a(href = "https://www.youtube.com/channel/UCxcnsr1R5Ge_fbTu5ajt8DQ", 'Youtube'),
a(href = "https://www.twitch.tv/bobross", "Twitch"),
a(href = "https://www.netflix.com/", "Netflix")
)
)
runApp()
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
getCounts <- function (features) {
filteredList = vector()
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- guest_data[, colSums(SelectVar != 0) > 0]
bob_data <- (raw_data) %>% filter(GUEST != "1")
for (val in features) {
#Get data frames where all elements have 1 in the right column
temp <- list(guest_data[guest_data[val] == 1, ])
#add that to our list
filteredList <- c(filteredList , temp)
}
count <- vector()
for (val in filteredList) {
count <- c(count, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Counts" = count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
runApp()
raw_data <-
read.csv("cleaned_data.csv") # Original DataFrame from csv file
getCounts <- function (features) {
filteredList = vector()
guest_data <- (raw_data) %>% filter(GUEST != "0")
guest_data <- guest_data[, colSums(guest_data != 0) > 0]
bob_data <- (raw_data) %>% filter(GUEST != "1")
for (val in features) {
#Get data frames where all elements have 1 in the right column
temp <- list(guest_data[guest_data[val] == 1, ])
#add that to our list
filteredList <- c(filteredList , temp)
}
count <- vector()
for (val in filteredList) {
count <- c(count, nrow(val))
}
#print(nrow(features))
if (length(features) < 1) {
plot <- "No data to display :("
}
else {
names <- data.frame("Features" = features, "Counts" = count)
plot <- ggplot(data = names, aes(x = Features, y = Counts, fill = Features)) + geom_bar(stat =
"identity", position = "dodge") + theme(legend.position="none")
}
return(plot)
}
#features <- c("BEACH", "CLIFF", "CLOUDS")
#getCounts(features)
#raw_data <- read.csv("cleaned_data.csv",stringsAsFactors = FALSE)
#guest_vs_solo <- function(features) {
#guest_data <- (raw_data) %>% filter(GUEST != "0") %>%
#   mutate(add_row())
#
#
#
# bob_data <- (raw_data) %>% filter(GUEST != "1") %>% select(-X, -EPISODE, -TITLE)
#
# }
runApp()
guest_data <- guest_data[, colSums(guest_data != 0) > 0]
View(guest_data)
runApp()
